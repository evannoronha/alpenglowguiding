---
interface Props {
  status: 'published' | 'draft';
}

const { status } = Astro.props;

// Define banner colors based on status
const isDraft = status === 'draft';
const bannerBg = isDraft
  ? 'linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%)'
  : 'linear-gradient(135deg, #34d399 0%, #10b981 100%)';
const bannerBorder = isDraft ? '#d97706' : '#059669';
const bannerTextColor = isDraft ? '#78350f' : '#064e3b';
---

<div style={`
  position: sticky;
  top: 0;
  z-index: 1000;
  background: ${bannerBg};
  border-bottom: 3px solid ${bannerBorder};
  padding: 1rem 1.5rem;
  margin: -10px -10px 1rem -10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
`}>
  <div style={`display: flex; align-items: center; gap: 0.75rem; font-size: 1.1rem; font-weight: 600; color: ${bannerTextColor};`}>
    <svg style="width: 24px; height: 24px; flex-shrink: 0;" fill="currentColor" viewBox="0 0 20 20">
      <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
      <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
    </svg>
    <span>PREVIEW MODE - Viewing {status.toUpperCase()} content</span>
  </div>
</div>
